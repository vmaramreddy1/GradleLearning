Listing Project Dependencies
-------------------------------------
Running gradle dependencies gives you a list of the dependencies of the selected project,
 broken down by configuration. For each configuration, the direct and
 transitive dependencies of that configuration are shown in a tree.
 Below is an example of this report:

 > gradle -q dependencies api:dependencies webapp:dependencies

------------------------------------------------------------
Root project
------------------------------------------------------------

No configurations

------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

compile
\--- org.codehaus.groovy:groovy-all:2.4.7

testCompile
\--- junit:junit:4.12
     \--- org.hamcrest:hamcrest-core:1.3

------------------------------------------------------------
Project :webapp - The Web application implementation
------------------------------------------------------------

compile
+--- project :api
|    \--- org.codehaus.groovy:groovy-all:2.4.7
\--- commons-io:commons-io:1.2

testCompile
No dependencies



Since a dependency report can get large, it can be useful to restrict the
report to a particular configuration. This is achieved with the optional
--configuration parameter:


Filtering dependency report by configuration

Output of gradle -q api:dependencies --configuration testCompile
> gradle -q api:dependencies --configuration testCompile

------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

testCompile
\--- junit:junit:4.12
     \--- org.hamcrest:hamcrest-core:1.3
